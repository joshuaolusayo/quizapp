{"ast":null,"code":"import _classCallCheck from\"/Users/mac/Desktop/Codes/React/quizapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/mac/Desktop/Codes/React/quizapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _createSuper from\"/Users/mac/Desktop/Codes/React/quizapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/Users/mac/Desktop/Codes/React/quizapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';var Timer=/*#__PURE__*/function(_Component){_inherits(Timer,_Component);var _super=_createSuper(Timer);function Timer(props){var _this;_classCallCheck(this,Timer);_this=_super.call(this,props);_this.state={time:10*60,// the time should be given in seconds. This is 10mins\nhours:0,minutes:0,seconds:0};return _this;}_createClass(Timer,[{key:\"render\",value:function render(){var _this$state=this.state,hours=_this$state.hours,minutes=_this$state.minutes,seconds=_this$state.seconds;return/*#__PURE__*/React.createElement(\"div\",{className:\"timer row\"},/*#__PURE__*/React.createElement(\"table\",null,/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",{className:\"bg-warning\"},/*#__PURE__*/React.createElement(\"th\",null,\"Hours\"),/*#__PURE__*/React.createElement(\"th\",null,\"Minutes\"),/*#__PURE__*/React.createElement(\"th\",null,\"Seconds\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",{className:\"text-center\"},hours),/*#__PURE__*/React.createElement(\"th\",{className:\"text-center\"},minutes),/*#__PURE__*/React.createElement(\"th\",{className:\"text-center\"},seconds)))));}},{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.myInterval=setInterval(function(){_this2.setState(function(prevState){return{time:prevState.time-1,hours:Math.floor(prevState.time/(60*60))%60,minutes:Math.floor(prevState.time/60)%60,seconds:prevState.time%60};});},1000);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){clearInterval(this.myInterval);}}]);return Timer;}(Component);export default Timer;","map":{"version":3,"sources":["/Users/mac/Desktop/Codes/React/quizapp/src/components/timer.js"],"names":["React","Component","Timer","props","state","time","hours","minutes","seconds","myInterval","setInterval","setState","prevState","Math","floor","clearInterval"],"mappings":"omBAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,C,GAEMC,CAAAA,K,8FACF,eAAaC,KAAb,CAAoB,uCAChB,uBAAOA,KAAP,EACA,MAAKC,KAAL,CAAa,CACTC,IAAI,CAAE,GAAK,EADF,CACY;AACrBC,KAAK,CAAE,CAFE,CAGTC,OAAO,CAAE,CAHA,CAITC,OAAO,CAAE,CAJA,CAAb,CAFgB,aAQnB,C,yDAES,iBAC4B,KAAKJ,KADjC,CACCE,KADD,aACCA,KADD,CACQC,OADR,aACQA,OADR,CACiBC,OADjB,aACiBA,OADjB,CAEN,mBACI,2BAAK,SAAS,CAAC,WAAf,eACI,8CACI,8CACI,0BAAI,SAAS,CAAC,YAAd,eACI,sCADJ,cAEI,wCAFJ,cAGI,wCAHJ,CADJ,CADJ,cAQI,8CACI,2CACI,0BAAI,SAAS,CAAC,aAAd,EAA6BF,KAA7B,CADJ,cAEI,0BAAI,SAAS,CAAC,aAAd,EAA6BC,OAA7B,CAFJ,cAGI,0BAAI,SAAS,CAAC,aAAd,EAA6BC,OAA7B,CAHJ,CADJ,CARJ,CADJ,CADJ,CAoBH,C,6DAEoB,iBACjB,KAAKC,UAAL,CAAkBC,WAAW,CAAC,UAAM,CAChC,MAAI,CAACC,QAAL,CAAc,SAAAC,SAAS,QAAK,CACxBP,IAAI,CAAEO,SAAS,CAACP,IAAV,CAAiB,CADC,CAExBC,KAAK,CAAEO,IAAI,CAACC,KAAL,CAAWF,SAAS,CAACP,IAAV,EAAkB,GAAG,EAArB,CAAX,EAAuC,EAFtB,CAGxBE,OAAO,CAAEM,IAAI,CAACC,KAAL,CAAWF,SAAS,CAACP,IAAV,CAAiB,EAA5B,EAAkC,EAHnB,CAIxBG,OAAO,CAAGI,SAAS,CAACP,IAAX,CAAmB,EAJJ,CAAL,EAAvB,EAMH,CAP4B,CAO1B,IAP0B,CAA7B,CAQH,C,mEAEuB,CACpBU,aAAa,CAAC,KAAKN,UAAN,CAAb,CACH,C,mBAhDeR,S,EAmDpB,cAAeC,CAAAA,KAAf","sourcesContent":["import React, {Component} from 'react';\n\nclass Timer extends Component {\n    constructor (props) {\n        super (props);\n        this.state = {\n            time: 10 * 60,       // the time should be given in seconds. This is 10mins\n            hours: 0,\n            minutes: 0,\n            seconds: 0\n        }\n    }\n\n    render () {\n        const {hours, minutes, seconds} = this.state;\n        return (\n            <div className=\"timer row\">\n                <table>\n                    <thead>\n                        <tr className=\"bg-warning\">\n                            <th>Hours</th>\n                            <th>Minutes</th>\n                            <th>Seconds</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th className=\"text-center\">{hours}</th>\n                            <th className=\"text-center\">{minutes}</th>\n                            <th className=\"text-center\">{seconds}</th>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n\n    componentDidMount () {\n        this.myInterval = setInterval(() => {\n            this.setState(prevState => ({\n                time: prevState.time - 1,\n                hours: Math.floor(prevState.time / (60*60)) % 60,\n                minutes: Math.floor(prevState.time / 60) % 60,\n                seconds: (prevState.time) % 60\n            }))\n        }, 1000)\n    }\n\n    componentWillUnmount () {\n        clearInterval(this.myInterval);\n    }\n}\n\nexport default Timer;"]},"metadata":{},"sourceType":"module"}